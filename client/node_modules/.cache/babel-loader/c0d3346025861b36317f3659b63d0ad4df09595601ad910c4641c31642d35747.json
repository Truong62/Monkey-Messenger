{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport urlReducer from \"./Slice/RouterBack\";\nimport logger from \"redux-logger\";\nimport { thunk } from \"redux-thunk\";\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst UrlReducer = persistReducer(persistConfig, urlReducer);\nconst store = configureStore({\n  reducer: {\n    url: UrlReducer,\n    middleware: [thunk, logger]\n  }\n});\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["configureStore","persistStore","persistReducer","storage","urlReducer","logger","thunk","persistConfig","key","UrlReducer","store","reducer","url","middleware","persistor"],"sources":["/Users/ngoctruong/Documents/App Monkey Messenger/client/src/Redux/Store.jsx"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport urlReducer from \"./Slice/RouterBack\";\nimport logger from \"redux-logger\";\nimport { thunk } from \"redux-thunk\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst UrlReducer = persistReducer(persistConfig, urlReducer);\n\nconst store = configureStore({\n  reducer: {\n    url: UrlReducer,\n    middleware: [thunk, logger],\n  },\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,KAAK,QAAQ,aAAa;AAEnC,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXL;AACF,CAAC;AAED,MAAMM,UAAU,GAAGP,cAAc,CAACK,aAAa,EAAEH,UAAU,CAAC;AAE5D,MAAMM,KAAK,GAAGV,cAAc,CAAC;EAC3BW,OAAO,EAAE;IACPC,GAAG,EAAEH,UAAU;IACfI,UAAU,EAAE,CAACP,KAAK,EAAED,MAAM;EAC5B;AACF,CAAC,CAAC;AAEF,MAAMS,SAAS,GAAGb,YAAY,CAACS,KAAK,CAAC;AAErC,SAASA,KAAK,EAAEI,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}