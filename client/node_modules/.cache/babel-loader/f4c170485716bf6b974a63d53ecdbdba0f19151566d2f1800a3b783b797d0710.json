{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nconst useApiUser = (url, initialData = {}) => {\n  _s();\n  const [data, setData] = useState(initialData);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  console.log(isLoading);\n  // const fetchData = async () => {\n  //     try {\n  //         setIsLoading(true);\n  //         const response = await axios.get(url);\n  //         setData(response.data);\n  //     } catch (error) {\n  //         setIsError(true);\n  //         console.error(error);\n  //     } finally {\n  //         setIsLoading(false);\n  //     }\n  // };\n\n  // useEffect(() => {\n  //     fetchData();\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, []);\n\n  const postData = async newData => {\n    try {\n      setIsLoading(true);\n      const response = await axios.post(url, newData);\n      setData(response.data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsError(true);\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const putData = async newData => {\n    try {\n      setIsLoading(true);\n      const response = await axios.put(url, newData);\n      setData(response.data);\n    } catch (error) {\n      setIsError(true);\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const deleteData = async id => {\n    try {\n      setIsLoading(true);\n      await axios.delete(`${url}/${id}`);\n      const updatedData = data.filter(item => item.id !== id);\n      setData(updatedData);\n    } catch (error) {\n      setIsError(true);\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    data,\n    isLoading,\n    isError,\n    postData,\n    putData,\n    deleteData\n  };\n};\n_s(useApiUser, \"bHxYrP8pBZhawnJpM++NDUenOr4=\");\nexport default useApiUser;","map":{"version":3,"names":["useState","axios","useApiUser","url","initialData","_s","data","setData","isLoading","setIsLoading","isError","setIsError","console","log","postData","newData","response","post","error","putData","put","deleteData","id","delete","updatedData","filter","item"],"sources":["/Users/ngoctruong/Documents/App Monkey Messenger/client/src/Components/Hook/useCreateApi.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nconst useApiUser = (url, initialData = {}) => {\n    const [data, setData] = useState(initialData);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n\n    console.log(isLoading)\n    // const fetchData = async () => {\n    //     try {\n    //         setIsLoading(true);\n    //         const response = await axios.get(url);\n    //         setData(response.data);\n    //     } catch (error) {\n    //         setIsError(true);\n    //         console.error(error);\n    //     } finally {\n    //         setIsLoading(false);\n    //     }\n    // };\n\n    // useEffect(() => {\n    //     fetchData();\n    //     // eslint-disable-next-line react-hooks/exhaustive-deps\n    // }, []);\n\n    const postData = async (newData) => {\n        try {\n            setIsLoading(true);\n            const response = await axios.post(url, newData);\n            setData(response.data);\n            setIsLoading(false)\n        } catch (error) {\n            setIsError(true);\n            console.error(error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const putData = async (newData) => {\n        try {\n            setIsLoading(true);\n            const response = await axios.put(url, newData);\n            setData(response.data);\n        } catch (error) {\n            setIsError(true);\n            console.error(error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const deleteData = async (id) => {\n        try {\n            setIsLoading(true);\n            await axios.delete(`${url}/${id}`);\n            const updatedData = data.filter((item) => item.id !== id);\n            setData(updatedData);\n        } catch (error) {\n            setIsError(true);\n            console.error(error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return {\n        data,\n        isLoading,\n        isError,\n        postData,\n        putData,\n        deleteData,\n    };\n};\n\nexport default useApiUser;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAGA,CAACC,GAAG,EAAEC,WAAW,GAAG,CAAC,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACI,WAAW,CAAC;EAC7C,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7CY,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;EACtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,MAAMM,QAAQ,GAAG,MAAOC,OAAO,IAAK;IAChC,IAAI;MACAN,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMO,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAACd,GAAG,EAAEY,OAAO,CAAC;MAC/CR,OAAO,CAACS,QAAQ,CAACV,IAAI,CAAC;MACtBG,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZP,UAAU,CAAC,IAAI,CAAC;MAChBC,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,SAAS;MACNT,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,MAAMU,OAAO,GAAG,MAAOJ,OAAO,IAAK;IAC/B,IAAI;MACAN,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMO,QAAQ,GAAG,MAAMf,KAAK,CAACmB,GAAG,CAACjB,GAAG,EAAEY,OAAO,CAAC;MAC9CR,OAAO,CAACS,QAAQ,CAACV,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZP,UAAU,CAAC,IAAI,CAAC;MAChBC,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,SAAS;MACNT,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,MAAMY,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC7B,IAAI;MACAb,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMR,KAAK,CAACsB,MAAM,CAAE,GAAEpB,GAAI,IAAGmB,EAAG,EAAC,CAAC;MAClC,MAAME,WAAW,GAAGlB,IAAI,CAACmB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC;MACzDf,OAAO,CAACiB,WAAW,CAAC;IACxB,CAAC,CAAC,OAAON,KAAK,EAAE;MACZP,UAAU,CAAC,IAAI,CAAC;MAChBC,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,SAAS;MACNT,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IACHH,IAAI;IACJE,SAAS;IACTE,OAAO;IACPI,QAAQ;IACRK,OAAO;IACPE;EACJ,CAAC;AACL,CAAC;AAAChB,EAAA,CAzEIH,UAAU;AA2EhB,eAAeA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}